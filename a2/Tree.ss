#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.0.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 30 #"(lib \"image-core.ss\" \"mrlib\")\0"
1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 74 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 11 #" Monospace\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
28 #"drscheme:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 31
#"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 8 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 8 24 #"drscheme:text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 15 #" Anonymous Pro\0"
0.0 11 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 12 12 72 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 15 #" Anonymous Pro\0"
0.0 9 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 14
1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1170 0 26 3 12 #"#lang racket"
0 0 24 3 1 #" "
0 0 17 3 45 #"; you may change to racket, shouldn't matter."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 14 3 15 #"sexp->LeafyTree"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 16 #"Tree:Leafy->Data"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 14 #"DataTree->sexp"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 13 #"annotate-code"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 15 #"Tree:Data->Pict"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 27 #"#| Q2. [~50% of assignment]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"   Purpose"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"   ======="
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"   Tree Representations."
0 0 17 29 1 #"\n"
0 0 17 3 49 #"     Recursive Branching Datatypes and Functions."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"   Functional Programming."
0 0 17 29 1 #"\n"
0 0 17 3 28 #"     Higher Order Functions."
0 0 17 29 1 #"\n"
0 0 17 3 27 #"       Using map and apply."
0 0 17 29 1 #"\n"
0 0 17 3 14 #"     Closures."
0 0 17 29 1 #"\n"
0 0 17 3 29 #"       Local for Refactoring."
0 0 17 29 1 #"\n"
0 0 17 3 17 #"     No mutation."
0 0 17 29 1 #"\n"
0 0 17 3 31 #"       Of variables nor values."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"   Code as structured data."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"   Syntax and Semantics."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"   Scope."
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 73
(
 #"   Estimated Times: (a) 1/2 hr (b) 1/4 hr (c) 1/4 hr (d) 1/2 hr (e) "
 #"1 hr."
) 0 0 17 29 1 #"\n"
0 0 17 3 18 #"   ==============="
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"     These are getting closer to the times on a test (which would be"
 #" less),"
) 0 0 17 29 1 #"\n"
0 0 17 3 49 #"      as you get used to Scheme and the Concepts."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"     A test is also faster because you're hurrying, not forced to fi"
 #"x small"
) 0 0 17 29 1 #"\n"
0 0 17 3 77
(
 #"      (if not representing misunderstanding semantics) typos, not wr"
 #"iting out"
) 0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"      comprehensive test cases (but that were on your mind while wri"
 #"ting!),"
) 0 0 17 29 1 #"\n"
0 0 17 3 67
#"      and maybe doing only (a still meaningful) part of a solution."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 74
(
 #"     On the other hand, you can't choose the time when you're in the"
 #" mood,"
) 0 0 17 29 1 #"\n"
0 0 17 3 59
#"      take breaks etc, so that can slow you down on a test."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 71
(
 #"     Keep an eye on your time for (e). Is it taking longer than (a)-"
 #"(d)"
) 0 0 17 29 1 #"\n"
0 0 17 3 73
(
 #"      combined, because of the amount of code? If so, you might be h"
 #"aving"
) 0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"      trouble with a core concept, or code design, often showing up "
 #"as"
) 0 0 17 29 1 #"\n"
0 0 17 3 71
(
 #"      time growing super-linearly (quadratic if it's a concept probl"
 #"em,"
) 0 0 17 29 1 #"\n"
0 0 17 3 63
#"      exponential(!) if it's coding by trial and error (why?))."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"   Restrictions (be glad, this makes it easier!)"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   ============"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"   Do not use any mutation or I/O."
0 0 17 29 1 #"\n"
0 0 17 3 42 #"   Do not write any recursion on lists. |#"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 70
(
 #"#| (a) Write sexp->LeafyTree converting a scheme value to a LeafyTre"
 #"e,"
) 0 0 17 29 1 #"\n"
0 0 17 3 64
#"    where lists become LeafyTrees and non-lists become Leafs. |#"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 14 3 9 #"LeafyTree"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"children"
0 0 4 3 1 #" "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 2 #"of"
0 0 4 3 1 #" "
0 0 14 3 14 #"LeafyTree/Leaf"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 14 3 4 #"Leaf"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"data"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 3 35 #" Preparation: draw some LeafyTrees."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"   Do not use any mutation, nor write any recursion on"
0 0 17 3 1 #" "
0 0 17 3 6 #"lists."
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 65
#"   When done, for your own amusement and enlightenment call it on"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"    (a quoted copy of) its code. |#"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"sexp->LeafyTree"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"list?"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"LeafyTree"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 15 #"sexp->LeafyTree"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"Leaf"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"displayLeafyTree"
0 0 4 3 1 #" "
0 0 14 3 2 #"lt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"Leaf?"
0 0 4 3 1 #" "
0 0 14 3 2 #"lt"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"'\""
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 12 #"            "
0 0 19 3 1 #" "
0 0 19 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"Leaf-data"
0 0 19 3 1 #" "
0 0 14 3 2 #"lt"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"',\""
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 19 29 1 #"\n"
0 0 19 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 19 3 3 #" \"["
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 8 #"for-each"
0 0 19 3 1 #" "
0 0 14 3 16 #"displayLeafyTree"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"LeafyTree-children"
0 0 19 3 1 #" "
0 0 14 3 2 #"lt"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 19 3 2 #" \""
0 0 19 3 2 #"]\""
0 0 22 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"#| (b) Write Tree:Leafy->Data converting a LeafyTree to a DataTree."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 66
#"    Assume that in each list of siblings, the first one is a leaf,"
0 0 17 29 1 #"\n"
0 0 17 3 56 #"     and use its data for the parent data in the result."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    Preparation: prepare."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 3 61
#"   Do not use any mutation, nor write any recursion on lists."
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 58
#"    When done, there's something obvious to do with it. |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"DataTree"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"data"
0 0 24 3 1 #" "
0 0 14 3 8 #"children"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"Tree:Leafy->Data"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"lt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"LeafyTree?"
0 0 4 3 1 #" "
0 0 14 3 2 #"lt"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 8 #"DataTree"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"Leaf-data"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"LeafyTree-children"
0 0 4 3 1 #" "
0 0 14 3 2 #"lt"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 16 #"Tree:Leafy->Data"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"LeafyTree-children"
0 0 4 3 1 #" "
0 0 14 3 2 #"lt"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 9 #"Leaf-data"
0 0 4 3 1 #" "
0 0 14 3 2 #"lt"
0 0 22 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"displayDataTree"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"DataTree?"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"[\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"DataTree-data"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 4 #"\": \""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 8 #"for-each"
0 0 4 3 1 #" "
0 0 14 3 15 #"displayDataTree"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"DataTree-children"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"]\""
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"'\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"',\""
0 0 22 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #"#| (c) Write DataTree->sexp converting a DataTree to a scheme value,"
 #" so that"
) 0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"    for a value producing a LeafyTree appropriate for Tree:Leafy->Da"
 #"ta : |#"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"DataTree->sexp"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"Tree:Leafy->Data"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"sexp->LeafyTree"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"DataTree->sexp"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"dt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"DataTree?"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 13 #"DataTree-data"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 14 #"DataTree->sexp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"DataTree-children"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 2 #"dt"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"#| (d) Write Tree:Data->Pict converting a DataTree to a picture, as "
 #"shown,"
) 0 0 17 29 1 #"\n"
0 0 17 3 32 #"    using the slideshow library."
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 17 29 1 #"\n"
0 0 17 3 10 #"   E.g: |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 14 #"slideshow/code"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 4 #"code"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 3 #"sli"
0 0 14 3 11 #"deshow/pict"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 9 #"ht-append"
0 0 24 3 1 #" "
0 0 14 3 2 #"vl"
0 0 14 3 1 #"-"
0 0 14 3 2 #"ap"
0 0 14 3 4 #"pend"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"Tree:Data->Pict"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"dt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"DataTree?"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"frame"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 9 #"vl-append"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 4 #"code"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 13 #"DataTree-data"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 9 #"ht-append"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 15 #"Tree:Data->Pict"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 17 #"DataTree-children"
0 0 4 3 1 #" "
0 0 14 3 2 #"dt"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"code"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 14 3 2 #"dt"
0 0 22 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 15 #"Tree:Data->Pict"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"Tree:Leafy->Data"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"sexp->LeafyTree"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"                                    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"                                         "
0 0 20 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"                                         "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"hi"
0 0 22 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 3          43 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0          16 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\333\0\0\0\267\b"
 #"\2\0\0\0\24\327\2746\0\0\37\1IDATx\234\355\235y\\\23G\377"
 #"\307gs\20\22\2\1\302}\243\200\\"
 #"\212 (\240\242\342\203(Z\17\300\23"
 #"\353Y\253\376<\252\325\247\332\303\247\317"
 #"\243\266\325\332V\255Zm\265\326\3\304\3EE\305[P\224[@\224\373\276\17"
 #"9\302\25B\216\375\375AH6\220\204(\201\254\355\274_\371gvf'\263\273"
 #"\237\235\343;\263\363\5\24\n\5@ 8\200B\241\240(\212\0\0P\24Uu"
 #"a \20\200 \b\212\242\4U\27\3\2\221@\272\"\371\225\247<\0201\26\333"
 #"_v\16q\271 \377T`\35\t\301\27JW$\332Y\372\340\310\326`\37g"
 #"sm\n\"\201vHL\233\262\377\r"
 #"\362\267\203\244\334\354:\263\17Ms\373"
 #"\374\31l\343!\357\213R\353H\364\355"
 #"\335\235\337@9B\6\202\364:\222\2403y\367\271\3235<aH\333\305\212\254"
 #"Hf\35\3317\236w`\302\314q\301"
 #"\201\356&4\22\322\235\213\247\205\332\300\n\v\371\a\240T{dS\344\24f`"
 #"LOf\364\340{\225W\246i)'k\310\337\37\345\333#Q\36\273\v\243m"
 #"\r=-%\367R!\377\0D\212\354HXo\204\310@\216=\262\365A\240F"
 #"O2\202A\310\vLT\355\t/\rl.p\254\rQ\0h\217\204\340\v\250"
 #"H\b\276\20\365\364\310&\376\233>\247"
 #"\324\363\1\0\0\240\255\31\347N\3074+p\276\232U\340\266-\26-(\0\0"
 #"\240\35Ya'\0374\364D\21\35\346\257\235f\"\32\244\303\2616DQ\320>"
 #"\360*N\272c\22\230oKe\367M\324\aA]\2307\346,\303u\361\355\n"
 #"\234\5\201t\323-E\330jC\360\5T$\4_@EB\360\5T$\4_@EB\360"
) 500
(
 #"\5T$\4_@EB\360\5T$\4_@EB\360\5\t\0\0\4\215q"
 #"\277\356\213(\351\22\35E[3\n0\211j\356\377\270}\213\221xi\31\321\300"
 #"w\313\277g\233+\264\212\27\2y'"
 #"\272\25\331\234r\372\300\341L\231\211\270"
 #"\231\227\216I\304\32\363\27n\205\212\204"
 #"\f\6\260\325\206\340\v\250H\b\276\200"
 #"\373\376@\360\2\334\367\a\202G\240\"!\370\2*\22\202/\240\"!\370\2*"
 #"\22\202/\240\"!\370\2*\22\202/\240\"!\370\2*\22\202/\240\"!\370"
 #"\2*\22\202/\240\"!\370\2*\22\202/\240\"!\370\2*\22\202/\240\""
 #"!\370\2*\22\202/\20U\27@\2\n\205\322\3319\324\376p\324\325\3259\34"
 #"\316\20\377)D*(\336\274\31w\257k\377'\374)\244/\360\253\6\b\36\201"
 #"\212\204\340\v\350\3I\311\360k3\347O\270/\332o\301x\365\322\a;\r)"
 #"\252,\321\a\6\254#!\370\2\326\221"
 #"\212\320\25\363\311\2615\261\2aH\323!4.`\34M\245%zg\270\t["
 #"O||\253Kj\34ejP\302\t+\372\20\227H\6\37\240\"\5-\345U"
 #"\t\t\245\311\231Uo\362\32J*X\215\235(\0\0 $\35c\246\375H\313"
 #"\311\376#\347M\320\327\202\225\377\a\312"
 #"\207\247\310\226\374\r\363\"\223\373\36G"
 #"yMU\265\361U\265\361\367\222\16X"
 #"\217\374\337\376i\201\303\310\370\262\266B"
 #"\24\341\303S\244\2\360\2123\277^\321"
 #"\216^\f\0166\31\362\252\222\240e\376"
 #"\331\1\377\267\335\276\323\0\242i\317\300"
 #"\307-&\230L\35\263\222\311\21\366<"
 #"\270\254\373\27\n\253U[\"\31\340\343"
 #"v\r\2\35E\373\217\226L\373n\230"
 #"\326\20\327\223\bU{\322\\\355\241\375OE Z\314\362\376jVO"
 #"\250\275\244\352Za\365P\317\216)\304\273+\222\317\316Kka\272\0322"
) 500
(
 #"\211\203P\34\5 \250\231\217\2662v\266r\37i\354l\247ge\242A#\2"
 #"\0\320\316\372\332\230\253\261\377=U,"
 #"\362\346\330\232\234W\310\31\346\252\256\232"
 #"bB\336\23\305\25\211\262\313\313o\206"
 #"\247\207^\314\317!\217\272\24\343\307\244"
 #"\16b\261\344@\267\376\376\224u\237\243"
 #"\210\272\276\321\364us\265*\217\257\212"
 #"\356y\365;::\4}\22\312\247\253\246\354\302o\311\21\17+r\353y\200B"
 #"\263\365r\370\3443\257\271\316\362\353Y"
 #"n\372\177N\315\17\357\220\32\247\200="
 #"\222\3776=\367\302\245\234\230\304\232\274"
 #"rv\367\374:I\223nf\241;b\244\261\273\247\365\324I&\346tl\18"
 #"\217\227\37[\373\242g\332\223\341\24\376"
 #"l\372\250\346\222s\207\22/\334\257(o\3@\215f;\316v\321\247\236\213="
 #"\351\312\334sV\320U\226R\370\340I"
 #"i\302\313\332\374\242\346\352f^\367\275"
 #"%\321\351\226vF\36\223\354\202\27\330"
 #"\271\350aj)v\345\256)\27/\212"
 #"\374\266\3528\207\307\370\273\3676Pt"
 #"\275\330\372\307\362[\342E\5{_\361\24P$\267#\363~fXhFdJ"
 #"\253\360\1\353\276\367e\r)zL\275wi\2\320\346\304\347+W&\276\346\366"
 #"\34\340t\344\307\244\356\210)H9\26"
 #"\350;\b\305\3\0\200.V\324\267\327\266G4\366zsx\255m%o\332J"
 #"\336\224\335\273\230x~\303\362\350-z"
 #"\262\275\356\242\359)\253\226\307&\262"
 #"Eyv\344?\313\330\363,+z\353"
 #"\202\223\353\215\350J\351\265\360X\241!\247\377\367R\312\v\316kk+|YP"
 #"\370\262\340\342\241\204\340_\2w\317b"
 #"\b_\3\252\341\242\271Z\27\377l\21"
 #"\246k*\274\362\232\353>V\362\35i\257\271\366Lb\215K\260=IN\317"
 #"\37m+.9\377]\344\3641\307\3\267\304]\25\311\21\217\b\270\234\272\242"
) 500
(
 #"\322\310_\257m\211\26\367\215\354\3479"
 #"\17S\334}2\277*k\333\32\214\34\305\260\256l\275}\251t\20\256\36\355J"
 #"\331\177\371\363>r|7:\353\216o\304\310Q\f7\345\340\265\377<f+\247"
 #"\334(\277\245\251\277\234\320\306\210\255\327"
 #"\216f\361z\302$\273 gLc\306~|\265\246]\362\214\216\327Y1,\211"
 #"#\303\325\244\265\332(\247--\372UXh\306\315\fi-\21\201\356>\335\334"
 #"\20\17{\220s\323\276;\2768RFk\351?\353H\bS\341R\242\234\244\303"
 #"\261O{=W\"E\207\326\325\324\212\202\256\272\230\229'\23\r&\272\255R"
 #"\353\20\272&o\257\277\36Q\336\"'"
 #"y\17\202\372\202_\3020\t\325\231\323\26\330\217\265\245k\0ns=+7\275"
 #"\374\351\323\272\306~s\341\274M\251\3"
 #"\0\0\242.\303\\\235]R\205\265\201"
 #"\263\243\366$\257\36\357\343\244\314\2564"
 #"\321\320\301\324\305I\177\270\tUK\203"
 #"$hk\315O\312\277\221\330\322\323\207h\374\353P\311\212\337mt\20\0\0 "
 #"[;,\266\177\361}\2160\256\371\321\353\314vsO\rQV\3347\221E\30"
 #"A\352\1\0\310\222\375H\1+\257\370\352\205\364\260+%eRl\373$Ko"
 #"\307\240\371N\363\376eb\204\343\301\2"
 #"I\323\311\333\366\243\340\261\213\274\264\325"
 #"\25o\257\320\226\2123w\260z$\271m\n<\366\177\346z$~\375\213\204\365"
 #"\237$dH\251;E\20L\374\306}\351'\f\360k3\323\"\312e{\31\20"
 #"\323YT\234\315\27\205\30\353.-\335\346(QA\b\330\254\204+)\321j\304"
 #"\376.\204:m\357\302\237\0260\251\b"
 #"\332\234\222\360\311\262\27\342\322V\276\16"
 #"}\355\365\203\373\200\353\17\204h"
 #"\350\356\260\366\323\221\363\247\233Y\366\352\a\240\343W"
 #"\34>?\367XSw\210\235\220\225\331f\343\243\t\0"
) 500
(
 #"\0\200\304\230\276\324\344\207o\252\204z"
 #"e\25E\274\352\362\364\352i\267\330u\327\237`\356\271\323(P\0@\267\"Q"
 #"vK\322\255\214\320\320Ww\263\244\330"
 #"\3\30\3666\363\202\235\203f[\333\353"
 #"|\0\363 \274\326\212\312\226\232\372\16\266@[]qc@g^^*\346\322"
 #"\311^\377:\274\301\\\217\b\0 \352{{\35\331]9\365\313ry\232|/"
 #"P.\217\207\tuu\nP\311\25\324\4*\303{\331T\357\376\362\321\236\23\360"
 #"\375\2&\25\1\0 \332\356\343\16}]<\365\277\325=M,;\376Q\23\307"
 #"\335`\240K=H\214\240\357\3\244G"
 #"!\344a\343M\30\307\232\204\265\35\373"
 #"mF\r\337G\263\373\336#\206\276\256"
 #"^\344\252\27\302{\327\371$\242\246\315"
 #"\313\242{\272\222\235\223\375\30\323\4\270"
 #".\261)\270\1@\267\"\237o;\263\362A\357\eN04\231\31\344\34<o"
 #"\3048+5\25\331y\336\17Va\301\231=\5W\357M9\373\3238G\5'"
 #"\237\e\262\3531\315\ai\342\212\341\206"
 #"\342k&\30\371\271\373\354.\177$\245\2576 \310\6z\372\240\240\\\30j9"
 #"\275\360l\376\n\217e\201\266^\366\32"
 #"\224w\30\216\320f\204\2302\304\351\t"
 #"&\376\256\36{\252\23{j\337\252\364\306v\324\340]2\224\5\332QRz\343"
 #"Z\356\343\204\252\354BVm\v_F\262\216\222F\1\0\302\333G\320\263\\6"
 #"\211\374\342\241P]-1\231\257\332,"
 #"\274\351\0\0n\336\215\202\267\242\223\210\346!S\350W\0\0\302:R\200YA"
 #"M\326\366\16t\236\37\354\350\347\242\251"
 #"\214\313\30L\310\243>\3774\376\377\4(@\271lven\311\355\vqai"
 #"\302\252\2565\351\311\232\3\372\267w\r\323V\244bo,\305\312M\307"
 #"\333V\r{\351\b]\317\333\22<\312\351}\326\0Q\263\266\17\34\236"
) 500
(
 #"p\270Pt\240\345\331\231G\317\316<\2\24MG\0173\317\361\303g|4\334"
 #"\305\220\324\317C 0\275\254$\32e"
 #"\202\226\376\30\23\220\330\243t\264\201\325"
 #"\314\3\272\3l\267\271-\367\367\335\334"
 #"~\256V\201\267\222\327\322\211\221\23B"
 #"\35\367\261\r\343a\266\360\205o)\276"
 #"\222\301\361\36O\1\235\r7\37\210\3079j\343GOd\n/\264\317\363\342\266"
 #"U\226\263\312\312[\epi\320\227\204"
 #"HU\327\321\241\351\352h\30\232\350\271Mq\337ub\365A?q\37\267!\352"
 #"iT\265bC\315\316\26L\373\t(\306\275\326i\20)\306\2031\v\243\306\\"
 #"}\310\307\243\257Y\227\323\232\25\227}"
 #"z\377\255\371\23\216\a\3777\273X\276\nh\32:\275\232d\"\305H\v\233["
 #"\347@\307\333('y\337\345\r\n\311"
 #"\21\0\200\362%?\21\241\273\216\16\320"
 #"\23\227&\346Ju+\0\235\59\367\353D\a\311>!\26\242.!\t\0\240"
 #"\316P\3@\364Hx\245/2\17\276\310<\b4\\f:\5\a9\5x\353"
 #"j} \3156Q\323o\275\227\315\203'=\36\364j\356\275b\207\230j(P"
 #"Kbo\"\"\245VB\20\4\0\345\177\213C\265\3678s\337\340\334\317q\177"
 #"\\\257i\222\22\337\365*\354NP\r"
 #"z\373\230\243\261\314G\320\367\23!%"
 #"\1775\304+\177\363\3359I#\215\266\241\377\254anv\f=-2\231\0\272"
 #"\n\322\276\376\265B\346\267sT\203\205s\265\302O\t\255\nm\261\231i-f"
 #"\314\333\3715\242\4\232\303\226x\210\207"
 #"\241$\0\200\307\2765\261\3019\27\303"
 #"\322\303o\3276\213sj\317\270\235\224q;i\27\2359y\216sP\220\203\257"
 #"\263\206\32\316\333q@\3223\262\243\201\202\36\213P]i\a\17h\364"
 #"o\224Tg\220\1\350\271\245(\247\266M\0\30\30\35\3639\265\254\301"
) 500
(
 #"\3724L\315\310\362\223\3\226\253v\267"
 #"f%\226%\276\254z\231T\26\227\332"
 #"\214\265h\265>\2129\230d\363\243\227"
 #"\214\253hoo\354\4\0\333_\346s\252\261\306'\212:u@#R\2641%"
 #"\347\r\366\200\245{\3705\37w\314z"
 #"\201\366\270\354o\344\345@\262\v\32i}\352yqw\250\255\344JB\265y\264"
 #"\270\210\332~.n\232\342\324\4\0\0"
 #"@H&\36\316\237\37Z\232\220\272\342"
 #"\3447\256>\326\222F\312\266\206\230\260"
 #"\330M\201'FM\276\364\305\3417\211"
 #"\345\\\34\233\312Q\36\207\205\261\\\361"
 #"y\212\tI\327\22\333v6%\26J\216\363:\32\23J\225P89\20\250\232"
 #"\316\223\235V\177\356w\354\342\352\264\214"
 #"\325\177\355\260a\212#\331qw\ed\266\230h\303\213\"\211\322\nX\365)U"
 #"\342 \302dh\3675:#\0042\246\322\345\262y\262\237)\377m\201\204a\333"
 #"~\351hW\211\345+\202\306\202f\371"
 #"]<\262\225\375\22\aQ\250\353\341O"
 #"\261\227+EA\332\214\205F\32\230\304"
 #"\22\257\17Q\2139y\271\357\237\3676"
 #"\276\210\b\3302\317D\277W\321\252*"
 #"\"\217\336]\352\373\253\367\312\324\"\351"
 #"\213\221\a\37^EFu\215\314?\347\227E'%b\272\204\272fT\205:\34"
 #"L\a}\2068\304}\32Z\372V\374\210\320\372gi\261\355R\316\32$\b4"
 #"\355\t\253\374v\272\211\2174\226\262y"
 #"2\223\263\243\317\225a\346S\4\345\267^\246`\364e<ZW\243o\313FP"
 #"cbT \250\252\257\223c\334\222|\253\251:d\t\321\360[co\276\5\362"
 #"!1\374?\26/\f\344\25\327\212;\1\306\16\v\34%GfR\316G\210\372"
 #".\16\e~\\\34\227\261\372\354nw\277\21\275\333\213\206\254\306fYc"
 #"\377AF\300I9xv\362\224\337\227\355\2129{\267(\275\250\245\205\323"
) 500
(
 #"\335i\22\264T\224_?|i\301\201\n\314\263\323\236\340LSH\221\352vv"
 #"n\30\263?\373\311\275\35\241um\2"
 #"\0\0\332\372\372\345\27_\25)\333\362\3\0\0hc\376\306\5Q\207\243\252k"
 #"\373v\301\272\332K\e\304!5\32A"
 #"N\303\333\32\35\275\355L\r\213\17\0"
 #"\340\327\304>\333\270\257\26\23I\365\362"
 #"\355=\362\1\0\0\262\206\275\21&X"
 #"\222\31\232\322)\243\232$2\207I\330\320r\357Vb\346=\5\325wb\17\366"
 #"?\37\200\30Nq\365\2226\3367\233\353d'9\341\"o)\2\201\246\355\275"
 #"x\222\367\342\211M\331\205\21a\351a\21e\225*\22b/8MI\321\tI"
 #"\321\t\362S\21G\215\r\264RlL\206h\231\255\b\240>\271&^\255\360t"
 #"\317y\267#\f+:\247\270Bn\213$\350L9\227t\267B|_\320\366z"
 #"l\v_\37\227\274o\257\206\270\24D"
 #"\232\327\n\217\251\306\335\2\343\325\247\345"
 #"\335K\313;\212\320\34\274-\306\270\350[\31R5)(\253\252>>*\363\t"
 #"&\227a\336\272r\247\3118\317~\bs\377Y\235I\3414\264JVh\246N"
 #"KGJ\23\2\2216\332G\e\274\22\257\334\v[\366g\272\357p\0273\212p"
 #"\335=\2311c\235\353\30\6\2\0\302t\267\e\1jr{\222v<\274\265\342"
 #"k\237Ms\215\231\374\3667\217^\369W\241\310\224)\201i\265l2\371y"
 #"o\263\267\356\3749\272\275*<E\26"
 #"\307\20t\34l\327\354\265\375\344\233\226"
 #"\324;\257BC_E\327\364\177\216\312"
 #"\241Z}\365\255\213\271\242k\177\20\312"
 #"\270\315\23\307\337\271\377\34#?\264\231"
 #"%\\l\211\350x\2315\305\227K;\21\345\274\216H>\233+-\n\0\0\0"
 #"/77T\"VC0sL\217\"E\231td?\317\311~.\303\340\251e\267a\206\246\3147"
) 500
(
 #"K\335`\202Q]\\\t\0]\235\r\275{3\324\217vy8J\3272qX"
 #"\240\233\313o\2173\304\265]\347\233\307"
 #"o0#\30}\363\220\321c\30\b\0\200d\351\374\371G\311k\243D\257\253 "
 #"'\"fC\204\254\2\311\0Q\37\273\324\206\361 [b\320n?r\246e\357"
 #"+{\207a\30\242\256\345\368\341\320"
 #"\265\365\251\327<G\250\350\vd\4Q\243\365_d\212\255\313\276sAK\372\\"
 #"\254<\210\246\316\277\34\37c'%s"
 #"\352\277\276\237\265\324z\20fP\21B"
 #"\177\346o\0\30\26\333OO\233\312\224"
 #"\235\216\242\277\346\210\3774f\337\b\362"
 #"\330\355A{|e\336-\222\371\250\237\3767\214!#V\2\2u\312\356\240\35"
 #"\23e\254\2075\260\375z\257\275\"\371"
 #"\320]G\317\224\34\232\214\\hg\326"
 #"\247\316x\217\257\32\20\272\221f\377\251"
 #"\6\a\204\26pt\313\250\314\242\330\304"
 #"\262\227\257jrK\233*j\331\302\16\20\201\3144e:\216\262\232\342?j\266"
 #"\247.\375\335\25\204\350N\230|\365\241\305\231\243\311\21\217*KY(@(V"
 #"\343\354\226n\232\0202\226\24wW\331"
 #"W\2\0\2423\342L\242^\362\263\222"
 #"\204\344\252\364\327o\213\313Y\335\235A"
 #"\0\0YKs\230\203\211\267\237\343\342`kk)\3\23\t\324,\235\17G1"
 #".\374\32\177.\272\262\224%\0\352t\aO\273\305k\307\315w\247\311}\272D"
 #"\253Es\36:f\237:\235y\377EMq\223\274\16\31B7\374\344\344\252\t"
 #"\367\322\376\272\224\27\227\366\266\216\r\0"
 #"\221l`k\346;{\324\312\220\341\306"
 #"Y\367\217)r\301T\203\240\31\364\v"
 #"\347\332\204A\202\311\342\177I\251\373\341"
 #"NT\37\334NTR\326\220\273\253h=\377\273!h\213\374\370\217/\222"
 #"\204%'y\5<=\343\240\217\2519\340NT\220!\205W\226s:I"
) 500
(
 #"\364\346\223\306\207X\351IS\37T$dH\340\267F\357\217\27\217\3354\207/"
 #"\363\244J\355\216\374m\277\216\205\250\236"
 #"\316\206\253\177d\25qP>\273\275 !?6_l\3721]\3501V\306h"
 #"\b*\0222hp\32\"\216$\245\364=\316\260\377\346\23\3Y\26V\330jC"
 #"\206\30\346\252#\276\276\262\355Y\260\216"
 #"\204\f\25D\252\355D\307O\267y\317"
 #"\266W\223S\21B\353\317\ag\375\371\333\2\255?\20<\2\25\t\301\27P\221"
 #"\20|\1\25\t\301\27P\221\20|\1\25\t\301\27P\221\20|\1\25\t\301\27"
 #"P\221\20|\1\25\t\301\27p^\e\0\341&*\20\tT\342\353\34@Ev"
 #"\3\347\265\373\242\252\267\24\266\332\20|"
 #"\1\25\t\301\27P\221\20|\1\25\t\301\27P\221\20|\201\35ksY\215\231"
 #"/\313\22S\313\222RK\223\363\333\305"
 #"\233\214i9\237\277=K\312\366\304\375\301omL}Q\30\227\\\236\226UW"
 #"P\306j\352\336\240Z\215jfm\350\3469b\366\34'o\vy\353\333!\375"
 #"\301\177\373\354\370\341\333\25\302o\374\324"
 #"\314?\372l\375x\346\a~GE_54=\272\350\263\243D\372.\202\357\245"
 #"HV\334u\377-9\315\362\222\250\215"
 #"Z<\363\340\246\21\246\242\335\261\340W"
 #"\r\357FW\316w\243\34\276\21\355t\345\270?/\375\v[%9\277\32\372\333"
 #"\322\353\253\6A\27W\271\36[x\255\255r\345\b\0\350z\25\36\31\274+\253"
 #"\6\37{\0Bp\301\20U\361\b\325\322\301\334{\374\360\361.z:\2221M"
 #"\217\356~\367\364\235}\274B\376\266H"
 #"\316\331\20\r\354,\274<,=\307\232"
 #"\220n\\\375\367c\231\333\357+\f\325"
 #"e\206\333\242\271#\375\\\265E\233\225\361[k\302w]\334\e'"
 #"\232\240\352z|\261\244i\222\343\207"
 #"\336\377\201(\a\221\f\264}\346\275"
) 500
(
 #"x\276\375\351\205\205\373\267z\316\eo"
 #"lL\e\350\34\22\335\305\367\352\335\215"
 #"\227\366L\2347F\e\273w\36Q\323h\311\177\374\307cvV\345\227UV)"
 #"\335\307\333{\201\262\213\243\177\\\345k"
 #"\257GF\20\4!1\35\374\326\37{^\317\3-w\2\324\20\21\332!1m"
 #"\242S:3\276\264\26G!n\307\3130}\20\326\215)\2308\335\345O\245n"
 #"g\316kL\277\374\375\247\1\356\326:"
 #"\344\356\204\352z\266^s7\375\34\225#\305_o\333\343EZ\242\34)\230N"
 #"$\0 k\207\35\246\230\b\202 \243"
 #"\16\25I\333\301\234\327\230\21\261o\375"
 #"\354q6z\352\302\204\32\206#\274\347m<p-SU\373y\213\20I\205\250"
 #"A\327U\252\223/\212\211\251\223\236\364"
 #"=E\tZ\206\236\246\2300\217\307\305"
 #"\301\310B\320\360h\207\267]\300\216\277"
 #"\236\3446\360\0\0\200\337\230\363\360\304"
 #"\306\tN\v\316\24q\6\253|\234\342\313\e<L\\\27~}2:\265\244Y"
 #"\250\36NCA\302\215\243\333g;\230\373|\31]-{S\374\367\1e\27\204"
 #"\257\ec2z\376\227'\242\222\n\e"
 #"z\232\301\216\272\274\370\353\307\276\b\32"
 #"e\354\276\341r\321\300\e\307\367G5+-\4]\r\330\332BG\227\251\362\25"
 #"\37\274\362\363K\347\34H\227\362\370\353#W/j\261\32\214J\234[z~\211"
 #"\307\262k\r2\23\260\236\357\v\360\254"
 #"\217J\376}\226\201r\234\\q\362O"
 #"\6{\254\275\303\222\235\2423\375\267\205"
 #"c\2539\251\227\224\362\177\357\201J\224"
 #"\320Y\360\346\236\330\a\0310\365\2612"
 #"R\261\"\321\226g\337n\277\333\253M"
 #"\325\265\262\325b\345\2274\1A\356\243"
 #"\"\345\377'\267\340\370\342U\222r$\32\3309\31\362+2\v1NU"
 #"\313\376\\\274jJ\316\215\20\323nM"
 #"\252Y\316\331\272\325\210\325\335\234\363\e"
) 500
(
 #"\342O\207&\211\3741ix~\274r\234.F\273jV\356X\277\220\235\231?"
 #"\6I\312\221\3512m\352hS\365\216\212\214'\0172D>@\32\"W/\373"
 #"S)\327\370\236\240}\351J\376\366\340\2101?\b\177S\242\222:\244$zO"
 #"8u\277\207\374 \316\334\363\302\225j\2760Jza\6\31\0\200\240\341\346l"
 #"\t\27\31\232\323\16\246\262\370(\212\362"
 #"\233\223\177\232J\227\274_\214%OZEg\263\323wZa\342\\\177+\345\211"
 #"\263n\276>\31\23\247\263,\266M\24"
 #"%h\272\273X\302\331\242\351\2223\331m\2\24EQ~\363\313#\263$L\22"
 #"\246\233\23\332\245\25\235\223\275w\4&"
 #"\231\343\376\274.\331\327\311\257\16\367\307"
 #"nHf\271\352rq\2478\253\362\310O\2551\261\206C\377,\272\377q\250\a"
 #"\270\2\366\213CW\177\21\357lIp"
 #"\373\314\177\216\221\252\207\331\35\257#\342"
 #"0\236\337h\1\177\234\335\354\246E\0\0\20\30\356[BO\316P\372\256\312h"
 #"S\354\221H\214\275\326j\333\265?\226\333wo9N`\270n8\177y\5f"
 #"\27\371\312\320\343\311m\275\263xG\370"
 #"U\267\16\337\23\257\3005^\37zx"
 #"\276\225\330\301\201\232\331\234\375\307\27\211"
 #"\337\221Z\0\0\326\31\336\2201\244Z@\2732\317\\Y{Y\374 \230\323f"
 #"\37\234?PO\273J\240.#\3\323N\322\247o\232\201yI\210F36\317"
 #"\244K9k td\335L\304,\320v\336\260\316\25\353\212\r\321\236\260y\205"
 #"\2058\334\370\364\376@\207\e-i\327"
 #"\322\304!\275\200\20\327^\327\2040F"
 #"\317t\2208R\251\n\v\310\320)\22"
 #"\355\312\16\215\370\3707\261\235Gk\302"
 #"\364\320\377\332\e\342\301/m}~=&d3\305^C\"\232\3560"
 #"\305V\271\177(h)|\203q\335\246\357\345m\322\353\275T\37\356;"
) 500
(
 #"\32S3W\274,\e\330\27\6]5\351\205\30M\277\375s\2\35\351\5\301\350"
 #"\343x\211sjU\341kp\210\24\211r\363/][zX|W\265\306O\273"
 #"\260\177\264u\377n]\207\4v\23\246"
 #"\201B\264M\31\275&\16\30\246:\312"
 #"\275Q\374\326\32\254\247,\35\v\235>"
 #"C;\262\256\5\246\237\311mz;\260\211-\36\253Z\21\337\\\22\f\3241\367"
 #"{1\24\212D\271\5W\"\227\374T\"\32\3122|\246_\374\321\315FE^"
 #"\232\372\3\225\262\276@\332\261\17\215w"
 #"\277\4\225\\\363\340[]xE\327\256/\371\261\250\265'\314\234:3|\317H"
 #"\v\234\324\216\335Puh\0\210\272\267"
 #"M\345M<\200\255\264x\315\345\215\212"
 #">\35\211\347\316\343\3100o\0235\r"
 #"\2650\301\246\262&\36\0\222\267\204\333"
 #"X\216\31\371\220u\364\24pv&\a\"]\237\336=^\1\0\0\240\355\267\355"
 #"\337S\365\345\365\230v\356\334\251\22\317"
 #"n\203\254H^I\344\365\305?\24\212"
 #"\332\v\343\200\331a\273\34{\367\231T"
 #"\216\276\215>\0\"\247\324\5\217\263Z"
 #"7\17\323\21M`\241\255o\36\345\313:\25A\210X\245p\332\272\4\0\b\237"
 #"t\327\333B\31~~\tZ6Nz \261'\266>>\276\212\353m\203\275-"
 #"\235\205\217\3231\36k\315\334,\344:"
 #"\353\354\0275\243\221\226DP\3303G"
 #"H\266\234\267e\307x\232\234\23v\356\334i\251\212jc0[m~\331\315\233"
 #"\213\277+\20Yd\315\347\5^\374\26"
 #"\177r\4\0\30\214v\301\330\377:\356"
 #"\35\212\252\22O\357\362+o\36\274+"
 #"\323\20B\240icMC\225\351\345\242"
 #"\2762\257\372q\244\f\357\233\200\3468"
 #"{\34Fb\257\217\376\236\216\265\317\243\315qG\316`\274\307\352\372L\e"
 #"&\245\302B\210j\22K\256;e\317"
 #"\306\"\332n\263\234\304\301\372\310\337\237"
) 500
(
 #"6\312\354&\242\35\245\251\262\342\6\233"
 #"\36E\242]m\354\306\246\16\321\257\5"
 #";\314\22\360Z0Q\215\315\235\234\376"
 #"\273\274\374\262\250\233\213v\3475\365\204"
 #"\r\375g\376\266\326\214\334\322\201\375\27"
 #"\341\217\325\305Sm7\215\346\0344\36"
 #"\243+\316\243u\213\276\177Z\307\5\0"
 #"pk\236\354Y\270\356\221l\313\v\231ic\212y\307X\327\277;\227\303F\1"
 #"@\331yg7\177\225,\3534D\307g\343\\\314\310\245\344\247\300u\347s;"
 #"\204\276\302\323\216-[\370\27f\370o"
 #"\22\262\336C\232\375\211\244e\214\365\n"
 #"Sp\347q\205L\203\r\3112p\275\227\270\2j8?/`gdn\257\265"
 #"\34\274\346\274\207\247\276^\350fd5"
 #"SV>\203\215p\r\271\240\365\312\212"
 #"c\273\262\24<\311h\367\235\345\v\f"
 #"\344.\313\340T\357\231s6\254?\337\364B\250#N\337\233\347MS\341\32r"
 #"A\363\343\2256S\317J\226\227\254c@o\253k\352\363\214\31K\236T\204M"
 #"\356Q\b\267\360\240\273\315\347\257\260\thfvfhy^e/?\361:\313"
 #"b\313\317\372\210\fK]\371\207&9lM\300\256\265!\31\331;\e\362\3133"
 #"\362%\346\0265\2\316\347\336\\j*\255\323\307N\336b;\366p%&\255\343"
 #"\364y\23mt\325\211\b\0\0\250Y\5\357\334<AW\250C\2645~\233\213"
 #"\367\301b\211\34\264\254\335\\\355\214\265"
 #"H\334\326\306\232\242\327\257\312z\372\373"
 #"\6\0\324\r\361\263\350~\372*_\341"
 #"\200\17\20\206\317\356\3\323\257\254\224h"
 #"\235\271Mu\335U<\305u\246e\332"
 #"\355<\351\247\222-\0037\372\354\370\364"
 #")F\270\35\25y\335\211M\334\r\252"
 #"R\352\244\237\a\324l7\204\237~\352\276<R,?^MNzo\347"
 #"\345\26\253\302O/\226*G\0\0\325iq\240\311\341#\242.0h\317\272"
) 500
(
 #"\e\212\251XFZ\255\333(R$\242\351\271\367\372\201T\317\177?\305\274*-"
 #"\305/c%5\252bT=\177\207\eH\26\313Bo\355p\223\322\311\265Z\31"
 #"\26\266f\270\354\336/\311r\331\37?"
 #"O\325\350s\2340\372\233\323\233\35\244"
 #"\234 \202l\265\354B\322\305u\243d"
 #"\16 4\275\277\270\35\177\342#9\263"
 #"\b4\367]\247\326\16\227\367'X\20"
 #"\332\250m\321\351a\353\307\364-m\357"
 #"|\207)\232\247\262\201\212\24A`N\371\341y\301\375\237?\365s2\240\0\0"
 #"\200\232\276\303\364\317N&\246\236\f2"
 #"\225?\32\243\214\330\30\225\31\265g\211"
 #"\227\225&\2\0\0\352\306n\363v\206"
 #"g>\333\355\251\325\337\212S\365a\v"
 #"\217\247V\245\206\357^\345?\332\\K"
 #"\3704\310:\326\36\37\255\3771\362M"
 #"\305\263\375\1\375\214\4\211\3723\216g"
 #"\344\336\372es\320D'3F\377\203"
 #"c\204f\267\344\267\244\232\374\373'\276"
 #"Z>\335}\270\276h\270\215P\264\315\34\306N[\264i\317\311\250\2275M/"
 #"\372\315i\220\200\36\226\24\371\323\226;"
 #"\1z3\243{\332e\311~\344\337\25"
 #"\225\177\213\b\201\340\2\250H\b\276\200"
 #"\212\204\340\v\250H\b\276\200\212\204\340"
 #"\v\250H\b\276\200\326\237\17y'\252"
 #"\301DU\326\37\22\300\223\247\2\n\5\247\253x!C\6\t\340\251\216\204@`"
 #"?\22\202/\240\"!\370\2*\22\202/\240\"!\370\2*\22\202/\240\"!"
 #"\370\2*\22\202/\240\"!\370\2*\22\202/\240\"!\370\2*\22\202/\240"
 #"\"!\370\2\356 \240d\370\265\231\363"
 #"'\334\317\354\t\32\257^\372`\247!\\\321\2448\260\216\204\340\vXG\ni"
 #"\215\271\352\261\246\244g\23\36jP\370"
 #"\232}\3568\334\305\355\357\17\254#!\370\2*\22\202/"
 #"`\253\255d\bZ\346\237\35\360\177+l\376\21M{\6"
) 494
(
 #"\274\305\357\4\274]J\6\241jO\232"
 #"\253\335\177:\210\f`\253\r\301\27\260"
 #"\216\224\211\240\265\376\306\261\347\247o\226"
 #"\344\324\363\1I\335\332\3036d\343\370"
 #"\220\261\32}n\0317\375?\247\346\207"
 #"K\337\251\34\332#\337\25\250H\351\240\315e?\4]?#\332}\226\327Y\34"
 #"\237\2717\276(\375\360\322\237\2\350x"
 #"\360S\366w\5\266\332R\341\276\376\355"
 #"\356\31)\233!\267\337\332\25\363\254\271"
 #"\357q\210\322\200u\244Txy\231<\0\0\315DW\277\253\271\364-\306\241A"
 #"K\301\331x\366\244\31T\314\246\vD"
 #"\203\211n\253\324:\272\207\327h{\375"
 #"\365\210\362wv\370\6\351\1*R\26"
 #"\364\300\243K\366\372k\222\321\256W\307"
 #".\5\37\256\353\331e\201\237\365\274\251"
 #"s\6\25\343l\204`\3427\356K\277"
 #"\236\350\332\314\264\210\362\314\336\271A\24"
 #"\5\266\332\322\241\372\372\356\360\323$\3"
 #"\0\20\265\221!\343\2740=\307\306\242vU\370T\375\247\0\25)\35\247Yb"
 #"w\261\b\215ao\200\211\343p\24\3600\5yO\240\"\245B16 \213{"
 #"\212\b\221\206u\202 \20\b\340FI\203\6T\244T\bj\22\6\36\334l\36"
 #"\367\17\0*\22\202/\240\"!\370\2*\22\202/\240\"!\370\2*\22\202/"
 #"\340\234\315\300\20t\246\234K\272[!"
 #"v\222\215\266\327\227b\342\353\343\222\367"
 #"\355\325\20\17\334\2114\257\25\36S\215aE \23\250\310\201\201r^G$\237"
 #"\315\225\31\317\313\315\r\225\210\325\20\314"
 #"\34\3\25)\axk \370\2*\22\202/\360\345aI%@\17KR\201\376"
 #"\265!\20\0`\253\r\301\eP\221\20|\1\25\t\301\27P\221\20|\1\25\t"
 #"\301\27P\221\20\234\1]ZC\360\3\212\242\3208\f\301\27\377"
 #"\17j.u\301\261H\263\34\0\0\0\0IEND\256B`\202"
) 0 0 4 3 1 #" "
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 36 #"   Prepare by reading parts 1-10 of:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"     http://docs.racket-lang.org/quick"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 78
(
 #"   Look up (and try in the REPL) the macro and functions from slides"
 #"how above,"
) 0 0 17 29 1 #"\n"
0 0 17 3 68
#"    by right-clicking on their names, or following links from Quick."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"   The 'code' macro by default doesn't evaluate its argument."
0 0 17 29 1 #"\n"
0 0 17 3 63
#"    To give it a non-literal runtime calculated value use \"#,\"."
0 0 17 29 1 #"\n"
0 0 17 3 62
#"    (\",\" will be explained tomorrow, but the variant \"#,\" will"
0 0 17 29 1 #"\n"
0 0 17 3 44 #"     wait until after the midterm :)#). Try:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"     (code (+ 1 2))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"     (code ,(+ 1 2))"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"     (code #,(+ 1 2)) |#"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 80
(
 #"#| (e) Write a function annotate-code that takes scheme source code "
 #"for a single"
) 0 0 17 29 1 #"\n"
0 0 17 3 85
(
 #"    statement/expression, inserting symbols (as shown, capitalized a"
 #"nd with a colon):"
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"     FORMALS: in the beginning of each argument list"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 74
(
 #"     BIND: in front of the variable in a let/letrec with only one bi"
 #"nding,"
) 0 0 17 29 1 #"\n"
0 0 17 3 58
#"            and also removes the extra set of parentheses."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 68
#"     CALL: in front of the function expression of each function call"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"   The only non-function operations that might be in the source code"
 #" are: |#"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 17 #"<taken-literally>"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 9 #"lambda/\316\273"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"<arg-name>"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 14 3 6 #"<stmt>"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 10 #"let/letrec"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 12 #"<local-name>"
0 0 4 3 1 #" "
0 0 14 3 7 #"<value>"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 14 3 6 #"<stmt>"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 15 3 11 #"define/set!"
0 0 4 3 1 #" "
0 0 14 3 6 #"<name>"
0 0 4 3 1 #" "
0 0 14 3 7 #"<value>"
0 0 22 3 1 #")"
0 0 4 3 5 #"     "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 11 #"<condition>"
0 0 4 3 1 #" "
0 0 14 3 12 #"<consequent>"
0 0 4 3 1 #" "
0 0 14 3 13 #"<alternative>"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 11 #"when/unless"
0 0 4 3 1 #" "
0 0 14 3 11 #"<condition>"
0 0 4 3 1 #" "
0 0 14 3 12 #"<consequent>"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 22 3 1 #"["
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 14 3 6 #"<stmt>"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 81
(
 #"  For quote do nothing to the expression, just return it [ \"it\" be"
 #"ing the entire:"
) 0 0 17 29 1 #"\n"
0 0 17 3 28 #"   (quote <taken-literally>)"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"  ]."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"  If you write your code using only the above, you"
0 0 17 3 7 #" should"
0 0 17 3 3 #" be"
0 0 17 3 1 #" "
0 0 17 3 4 #"able"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 4 #"then"
0 0 17 3 1 #" "
0 0 17 3 4 #"try:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 13 #"annotate-code"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 21 #"(define annotate-code"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                      "
0 0 17 3 4 #"(\316\273 "
0 0 17 3 3 #"..."
0 0 17 3 1 #" "
0 0 17 3 20 #"rest of your code)))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 73
(
 #"  Of course you can't/shouldn't use set!, when, unless, begin nor be"
 #"gin0,"
) 0 0 17 29 1 #"\n"
0 0 17 3 37 #"   since there's no mutation nor I/O."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"  I tried it with only the rest, but you might enjoy cond, and let o"
 #"r let* with"
) 0 0 17 29 1 #"\n"
0 0 17 3 74
(
 #"   multiple bindings. My version is about as long as for (a)-(d) com"
 #"bined:"
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"   (length (flatten '<my-solution>)) ;=> 84"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 17 29 1 #"\n"
0 0 17 3 61
#"  There are a number of opportunities to refactor repetition."
0 0 17 29 1 #"\n"
0 0 17 3 77
(
 #"   The above syntactic forms were grouped and ordered to suggest a g"
 #"ood order"
) 0 0 17 29 1 #"\n"
0 0 17 3 47 #"   to handle them in, after a simple base case."
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 82
(
 #"  As you notice yourself repeating code while handling more and more"
 #" of the above,"
) 0 0 17 29 1 #"\n"
0 0 17 3 74
(
 #"   (or after testing copy-pasted-altered code) put in appropriate le"
 #"ts for"
) 0 0 17 29 1 #"\n"
0 0 17 3 73
(
 #"   the repeated value, or operation that can be a call-by-value func"
 #"tion."
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"  Put the lets as 'close' (smallest scope) to where they're needed a"
 #"s possible."
) 0 0 17 29 1 #"\n"
0 0 17 3 78
(
 #"   Not making external named helpers could help, because internal on"
 #"es can use"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"   names in scope (closure behaviour!) as opposed to getting them as"
 #" arguments."
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 56 #"  Look up member, it might help with the refactoring. |#"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"annotate-code"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 22 3 8 #"#:SYNTAX"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"SYNTAX"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"list?"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 4 #"case"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 5 #"quote"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 15 3 2 #"\316\273"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"FORMALS:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"annotate-code"
0 0 4 3 1 #" "
0 0 22 3 8 #"#:SYNTAX"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 13 #"annotate-code"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 5 #"))))]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 15 3 6 #"letrec"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 5 #"BIND:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"annotate-code"
0 0 4 3 1 #" "
0 0 22 3 8 #"#:SYNTAX"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 13 #"annotate-code"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 5 #"))))]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 15 3 4 #"when"
0 0 4 3 1 #" "
0 0 15 3 6 #"unless"
0 0 4 3 1 #" "
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 15 3 6 #"begin0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 13 #"annotate-code"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 4 #")))]"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 6 #"SYNTAX"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 13 #"annotate-code"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 5 #"CALL:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 13 #"annotate-code"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 1 #"s"
0 0 22 3 3 #")))"
0           0
